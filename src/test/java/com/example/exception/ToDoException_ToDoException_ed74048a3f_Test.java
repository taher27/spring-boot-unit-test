/*
Test generated by RoostGPT for test JavaTest1601 using AI Type Open AI and AI Model gpt-3.5-turbo-0301

Test Scenarios for ToDoException function:

1. Verify that the ToDoException constructor is able to create an instance of the ToDoException object with the specified error message.
2. Verify that the ToDoException constructor throws an exception when the error message is null.
3. Verify that the ToDoException constructor throws an exception when the error message is empty.
4. Verify that the ToDoException constructor sets the error message correctly when the error message is non-null and non-empty.
5. Verify that the ToDoException object created using the constructor has the same error message as the one passed in the constructor.
*/
package com.example.exception;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

public class ToDoException_ToDoException_ed74048a3f_Test {
    
    private ToDoException toDoException;
    
    @BeforeEach
    public void setUp() {
        toDoException = null;
    }
    
    @Test
    @DisplayName("Verify that the ToDoException constructor is able to create an instance of the ToDoException object with the specified error message.")
    public void testToDoExceptionConstructorWithMessage() {
        String errorMessage = "This is a sample error message";
        toDoException = new ToDoException(errorMessage);
        Assertions.assertNotNull(toDoException);
        Assertions.assertEquals(errorMessage, toDoException.getErrorMessage());
    }
    
    @Test
    @DisplayName("Verify that the ToDoException constructor throws an exception when the error message is null.")
    public void testToDoExceptionConstructorWithNullMessage() {
        String errorMessage = null;
        Assertions.assertThrows(NullPointerException.class, () -> {
            toDoException = new ToDoException(errorMessage);
        });
    }
    
    @Test
    @DisplayName("Verify that the ToDoException constructor throws an exception when the error message is empty.")
    public void testToDoExceptionConstructorWithEmptyMessage() {
        String errorMessage = "";
        Assertions.assertThrows(IllegalArgumentException.class, () -> {
            toDoException = new ToDoException(errorMessage);
        });
    }
    
    @Test
    @DisplayName("Verify that the ToDoException constructor sets the error message correctly when the error message is non-null and non-empty.")
    public void testToDoExceptionConstructorWithNonEmptyMessage() {
        String errorMessage = "This is a sample error message";
        toDoException = new ToDoException(errorMessage);
        Assertions.assertEquals(errorMessage, toDoException.getErrorMessage());
    }
    
    @Test
    @DisplayName("Verify that the ToDoException object created using the constructor has the same error message as the one passed in the constructor.")
    public void testToDoExceptionObjectCreation() {
        String errorMessage = "This is a sample error message";
        toDoException = new ToDoException(errorMessage);
        Assertions.assertEquals(errorMessage, toDoException.getErrorMessage());
    }
}
